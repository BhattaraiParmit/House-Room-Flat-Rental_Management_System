# Generated by Django 4.0.5 on 2022-08-08 22:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('profile', models.ImageField(default='room_image1.jpg', null=True, upload_to='')),
                ('phone', models.CharField(max_length=10)),
                ('auth_token', models.CharField(max_length=100, null=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Sell', 'Sell'), ('Rent', 'Rent'), ('PG', 'PG')], default='Rent', max_length=100, null=True)),
                ('property_type', models.CharField(choices=[('Apartment', 'Apartment'), ('House', 'House'), ('Room', 'Room'), ('Flat', 'Flat')], default='Apartment', max_length=100, null=True)),
                ('area', models.CharField(max_length=20, null=True)),
                ('province', models.CharField(choices=[('Province 1', 'Province 1'), ('Madhesh Province', 'Madhesh Province'), ('Bagmati Province', 'Bagmati Province'), ('Gandaki Province', 'Gandaki Province'), ('Lumbini Province', 'Lumbini Province'), ('Karnali Province', 'Karnali Province'), ('Sudurpashchim Province', 'Sudurpashchim Province')], max_length=50, null=True)),
                ('city', models.CharField(choices=[('Kathmandu', 'Kathmandu'), ('Pokhara', 'Pokhara'), ('Bhaktapur', 'Bhaktapur'), ('Lalitpur', 'Lalitpur'), ('Butwal', 'Butwal'), ('Narayanghat', 'Narayanghat'), ('Hetauda', 'Hetauda'), ('Dharan', 'Dharan'), ('Illam', 'Illam'), ('Nepalghunj', 'Nepalghunj')], max_length=20, null=True)),
                ('negotiable', models.CharField(choices=[('Negotiable', 'Negotiable'), ('Not Negotiable', 'Not Negotiable')], default='Negotiable', max_length=100, null=True)),
                ('furnishing', models.CharField(choices=[('Furnished', 'Furnished'), ('Semi Furnished', 'Semi Furnished'), ('Un-Furnished', 'Un-Furnished')], default='Furnished', max_length=100, null=True)),
                ('age_of_property', models.CharField(choices=[('0-1 years', '0-1 years'), ('1-5 years', '1-5 years'), ('5-10 years', '5-10 years'), ('10+ years', '10+ years')], default='0-1 years', max_length=50, null=True)),
                ('rent_out_to', models.CharField(choices=[('Any', 'Any'), ('Family', 'Family'), ('Men', 'Men'), ('Girls', 'Girls')], default='Any', max_length=50, null=True)),
                ('security_deposite', models.FloatField(null=True)),
                ('bedroom', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], default='3', max_length=2)),
                ('bathroom', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], default='3', max_length=2)),
                ('balconies', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], default='3', max_length=2)),
                ('lease_duration', models.CharField(choices=[('1 month', '1 month'), ('6 month', '6 month'), ('1 year', '1 year'), ('2 year', '2 year'), ('3 year', '3 year')], default='1 year', max_length=20)),
                ('pets', models.CharField(choices=[('No pets allowed', 'No pet allowed'), ('Cats allowed', 'Cats allowed'), ('dogs allowed', 'dogs allowed'), ('Both cats and dog allowed', 'Both cats and dog allowed')], default='No pets allowed', max_length=50)),
                ('parking', models.CharField(choices=[('Steet', 'Street'), ('Garage', 'Garage'), ('Only Bike', 'Only Bike'), ('Car', 'Car'), ('Both car and Bike', 'Both car and Bike')], default='Steet', max_length=50)),
                ('air_condition', models.CharField(default='None', max_length=30, null=True)),
                ('electricity', models.CharField(blank=True, default='None', max_length=20, null=True)),
                ('water', models.CharField(blank=True, default='None', max_length=20, null=True)),
                ('fans', models.CharField(blank=True, default='None', max_length=20, null=True)),
                ('no_smoking', models.CharField(blank=True, default='None', max_length=20, null=True)),
                ('internet', models.CharField(blank=True, default='None', max_length=20, null=True)),
                ('price', models.FloatField()),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('video', models.FileField(blank=True, null=True, upload_to='videos/')),
                ('description', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('savedStatus', models.BooleanField(default=False)),
                ('soldStatus', models.BooleanField(default=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TotalStar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('totalStar', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SoldProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.property')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SavedHomes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.property')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('rating', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=10, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('Property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.property')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Property_Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='images/')),
                ('Property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.property')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.province')),
            ],
        ),
    ]
